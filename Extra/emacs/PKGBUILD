#-*-mode:sh-*-
# note: git source is very large in size, if needed change the source
# to https://ftp.gnu.org/gnu/emacs/<search for the latest version>
# and use "D405AA2C862C54F17EEE6BE0E8BCD7866AFCF978"
# also change the directories accordingly, see
# https://git.archlinux.org/svntogit/packages.git/tree/trunk/PKGBUILD?h=packages/emacs.
# Or don't compile emacs at all, it's never a hard dependencies of any
# packages.

BRANCH=master

pkgname=emacs
pkgver=27.0.50.135045
pkgrel=1
pkgdesc="GNU Emacs. Development."
arch=('x86_64')
url="http://www.gnu.org/software/emacs/"
license=('GPL3')
_deps=('alsa-lib' 'gnutls' 'libxml2' 'clang' 'lld' 'dbus' 'hicolor-icon-theme' 'libxinerama' 'libxrandr' 'lcms2' 'librsvg' 'xaw3d' 'gtk2'
       'gtk3' 'gpm' 'm17n-lib' 'libotf' 'libmagick6' 'libjpeg-turbo' 'giflib' 'webkit2gtk' 'texlive-core' 'mailutils' 'krb5' 'libxpm' 'libpng'
       'libsystemd' 'libxft' 'jansson')
depends=('zlib')
_makedeps=('git')
makedepends=()
source=("emacs-git::git+https://github.com/emacs-mirror/emacs.git#branch=$BRANCH")
provides=('emacs')

for _d in "${_deps[@]}";do
  if [[ -n "$(pacman -Ss "^${_m}$" 2>/dev/null)" ]];then
    depends+=( "${_d}")
  else
    optdepends+=( "${_d}")
  fi
done
for _m in "${_makedeps[@]}";do
  if [[ -n "$(pacman -Ss "^${_m}"$ 2>/dev/null)" ]];then
    depends+=( "${_m}")
  else
    optdepends+=( "${_m}")
  fi
done

if [[ $BRANCH = "master" ]]; then
  pkgver() {
    cd "$srcdir/emacs-git"

    printf "%s.%s" \
           "$(grep AC_INIT configure.ac | \
      sed -e 's/^.\+\ \([0-9]\+\.[0-9]\+\.[0-9]\+\?\).\+$/\1/')" \
           "$(git rev-list --count HEAD)"
  }
else
  pkgver() {
    cd "$srcdir/emacs-git"

    printf "%s.%s" \
           "$(grep AC_INIT configure.ac | \
      awk '{split($0,a,","); print a[2]}' | \
      sed -e 's/\ //g' )" \
           "$(git rev-list --count HEAD)"
  }
fi

# There is no need to run autogen.sh after first checkout.
# Doing so, breaks incremental compilation.
prepare() {
  cd "$srcdir/emacs-git"
  [[ -x configure ]] || ( ./autogen.sh git && ./autogen.sh autoconf )

  local _conf=(
    --prefix=/usr
    --sysconfdir=/etc
    --libexecdir=/usr/lib
    --localstatedir=/var
    --mandir=/usr/share/man
    --with-gameuser=:games
    --with-modules
    # Beware https://debbugs.gnu.org/cgi/bugreport.cgi?bug=25228
    # dconf and gconf break font settings you set in ~/.emacs.
    # If you insist you'll need to play gymnastics with
    # set-frame-font and set-menu-font. Good luck!
    --without-gconf
    --without-gsettings
  )

  if [[ -z "$(pacman -Qq clang 2>&1 >/dev/null)" ]] &&
       [[ -z "$(pacman -Qq lld 2>&1 >/dev/null)" ]];then
    export CC=/usr/bin/clang ;
    export CXX=/usr/bin/clang++ ;
    export CPP="/usr/bin/clang -E" ;
    export LDFLAGS+=' -fuse-ld=lld' ;
    export LD=/usr/bin/ld.gold
    export LDFLAGS+=" -fuse-ld=gold";
    makedepends+=( 'clang' 'lld') ;
    _conf+=( '--enable-autodepend');
  fi

  if [[ ! "$(pacman -Qqs xaw3d 2>&1 >/dev/null)" ]];then
    _conf+=( '--without-xaw3d');
  fi
  if [[ ! "$(pacman -Qqs gpm 2>&1 >/dev/null)" ]];then
    _conf+=( '--without-gpm');
  fi
  if [[ ! "$(pacman -Qqs m17n-lib 2>&1 >/dev/null)" ]];then
    _conf+=( '--without-m17n-flt');
  fi
  if [[ "$(pacman -Qqs libmagick6 2>&1 >/dev/null)" ]];then
    _conf+=( '--with-imagemagick');
    export PKG_CONFIG_PATH=/usr/lib/imagemagick6/pkgconfig;
  else
    _conf+=( '--without-imagemagick');
  fi
  if [[ "$(pacman -Qqs cairo 2>&1 >/dev/null)" ]];then
    _conf+=( '--with-cairo');
  fi
  if [[ "$(pacman -Qqs mailutils 2>&1 >/dev/null)" ]];then
    _conf+=( '--with-mailutils');
  fi
  if [[ "$(pacman -Qqs krb5 2>&1 >/dev/null)" ]];then
    _conf+=( '--with-kerberos5');
  fi
  if [[ ! "$(pacman -Qqs libxpm 2>&1 >/dev/null)" ]];then
    _conf+=( '--without-xpm');
  fi
  if [[ ! "$(pacman -Qqs libjpeg-turbo 2>&1 >/dev/null)" ]];then
    _conf+=( '--without-jpeg');
  fi
  if [[ ! "$(pacman -Qqs giflib 2>&1 >/dev/null)" ]];then
    _conf+=( '--without-gif');
  fi
  if [[ ! "$(pacman -Qqs libpng 2>&1 >/dev/null)" ]];then
    _conf+=( '--without-png');
  fi
  if [[ ! "$(pacman -Qqs librsvg 2>&1 >/dev/null)" ]];then
    _conf+=( '--without-rsvg');
  fi
  if [[ ! "$(pacman -Qqs lcms2 2>&1 >/dev/null)" ]];then
    _conf+=( '--without-lcms2');
  fi
  if [[ ! "$(pacman -Qqs libsystemd 2>&1 >/dev/null)" ]];then
    _conf+=( '--without-libsystemd');
  fi
  if [[ ! "$(pacman -Qqs libxml2 2>&1 >/dev/null)" ]];then
    _conf+=( '--without-xml2');
  fi
  if [[ ! "$(pacman -Qqs libxft 2>&1 >/dev/null)" ]];then
    _conf+=( '--without-xft');
  fi
  if [[ ! "$(pacman -Qqs libotf 2>&1 >/dev/null)" ]];then
    _conf+=( '--without-libotf');
  fi
  if [[ ! "$(pacman -Qqs dbus 2>&1 >/dev/null)" ]];then
    _conf+=( '--without-dbus');
  fi
  if [[ "$(pacman -Qqs alsa-lib 2>&1 >/dev/null)" ]];then
    _conf+=( '--with-sound=alsa');
  fi
  if [[ "$(pacman -Qqs gtk3 2>&1 >/dev/null)" ]];then
    _conf+=( '--with-xwidgets');
  fi

  ./configure "${_conf[@]}"
}

build(){
  cd "$srcdir/emacs-git"
  make
}

package(){
  cd "$srcdir/emacs-git"
  make DESTDIR="$pkgdir/" install

  # remove conflict with ctags package
  mv "$pkgdir"/usr/bin/{ctags,ctags.emacs}
  mv "$pkgdir"/usr/share/man/man1/{ctags.1.gz,ctags.emacs.1}
}
md5sums=('SKIP')
