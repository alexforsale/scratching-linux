#-*-mode: sh -*-
pkgname=ninja
pkgver=1.8.2
pkgrel=1
pkgdesc='Small build system with a focus on speed'
arch=(x86_64)
url='https://ninja-build.org/'
license=(Apache)
depends=(gcc-libs)
makedepends=(python)
source=(https://github.com/ninja-build/ninja/archive/v1.8.2/ninja-1.8.2.tar.gz
        http://www.linuxfromscratch.org/patches/lfs/development/${pkgname}-${pkgver}-add_NINJAJOBS_var-1.patch)
groups=('lfs-base')

if [[ -n "$(pacman -Ss ^emacs$ 2>/dev/null)" ]];then
  makedepends+=( 'emacs')
else
  optdepends+=( 'emacs')
fi
if [[ -n "$(pacman -Ss ^re2c$ 2>/dev/null)" ]];then
  makedepends+=( 're2c')
else
  optdepends+=( 're2c')
fi

prepare(){
  cd ninja-$pkgver
  patch -Np1 -i ../${pkgname}-${pkgver}-add_NINJAJOBS_var-1.patch
}

build() {
  cd ninja-$pkgver

  python3 configure.py --bootstrap
  if [[ -n "$(pacman -Qq emacs 2>/dev/null)" ]];then
    emacs -Q --batch -f batch-byte-compile misc/ninja-mode.el
  fi
}

check() {
  cd ninja-$pkgver

  python3 ./configure.py
  ./ninja ninja_test
  ./ninja_test --gtest_filter=-SubprocessTest.SetWithLots
}

package() {
  cd ninja-$pkgver

  install -m755 -D ninja "$pkgdir/usr/bin/ninja"
  install -m644 -D doc/manual.asciidoc "$pkgdir/usr/share/doc/ninja/manual.asciidoc"
  install -Dm644 COPYING "$pkgdir/usr/share/licenses/$pkgname/COPYING"

  if [[ -z "$(pacman -Qq emacs 2>&1 >/dev/null)" ]];then
    install -m644 -D misc/ninja-mode.el "$pkgdir/usr/share/emacs/site-lisp/ninja-mode.el"
    install -m644 -D misc/ninja-mode.elc "$pkgdir/usr/share/emacs/site-lisp/ninja-mode.elc"
  fi
  install -m644 -D misc/ninja.vim "$pkgdir/usr/share/vim/vimfiles/syntax/ninja.vim"

  install -m644 -D misc/bash-completion "$pkgdir/usr/share/bash-completion/completions/ninja"
  install -m644 -D misc/zsh-completion "$pkgdir/usr/share/zsh/site-functions/_ninja"
}
md5sums=('5fdb04461cc7f5d02536b3bfc0300166'
         'f537a633532492e805aa342fa869ca45')
